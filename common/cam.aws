#!/bin/bash
vmbcam=mako0
free=n
rec=n
rep=n
verb=no
go=no
curdir=`pwd`


for arg in $*
do
    if [[ $arg =~ ^[A-Za-z0-9_]*=[A-Za-z0-9_]*$ ]]; then
	param=(${arg//=/ })
	case ${param[0]} in
	    "vmbcam") vmbcam=${param[1]};;
	    "ch_img") ch_img=${param[1]};;    # image channel
	    "stime") stime=${param[1]};;
	    "verb") verb=${param[1]};;
	    "rec") rec=${param[1]};;
	    "rep") rep=${param[1]};;
	esac
    fi    
done

. ./config_$vmbcam

offsetx=$((($swidth-$width)/2))
offsety=$((($sheight-$height)/2))

recpath=$path_data/log/$stime/${vmbcam}.avi
tspath=$path_data/log/$stime/${vmbcam}.ts
  
if [ $rep = "y" ]; then
    if [ ! -d  "$path_data/log/$stime" ]; then
	echo Log at $stime was not found.
	exit
    fi
    ./h264decpip file $recpath > $curdir/h264dec.gst
    filter gstcam log$vmbcam -i -o
    fset log$vmbcam ch_out $ch_img
    fset log$vmbcam width $width height $height
    fset log$vmbcam fmt_in NV12 fmt_out $fmt_out
    fset log$vmbcam fppl $curdir/h264dec.gst
    fset log$vmbcam fts $tspath
    fset log$vmbcam verb $verb

    if [ $go = "y" ]; then
	go $stime
    fi
else

    filter vmbmono $vmbcam -i -o $ch_img
    fset $vmbcam channel $ch_img
    fset $vmbcam addr $addr
    fset $vmbcam GevSCPSPacketSize $PacketSize
    fset $vmbcam PixelFormat $fmt
    if [ $free = "n" ]; then
	fset $vmbcam TriggerSource Software
    else
	fset $vmbcam TriggerSource Freerun
	fset $vmbcam BandwidthControlMode StreamBytesPerSecond
	fset $vmbcam StreamBytesPerSecond $StreamBytesPersecond
    fi
    
    fset $vmbcam Width $width Height $height OffsetX $offsetx OffsetY $offsety
    fset $vmbcam GVCPCmdTimeout 1000
    fset $vmbcam Ttrig $Ttrig
    fset $vmbcam nfrmbuf $nfrmbuf
    fset $vmbcam ExposureAuto $ExposureAuto
    fset $vmbcam ExposureAutoMax $ExposureAutoMax
    fset $vmbcam ExposureAutoMin $ExposureAutoMin
    fset $vmbcam fmt_out $fmt_out
    fset $vmbcam verb $verb
    
    if [ $rec = "y" ]; then
	./h264encpip file $recpath width $width height $height bitrate $bitrate > $curdir/h264enc.gst
	filter gstenc log$vmbcam -i -o
	fset log$vmbcam ch_in $ch_img
	fset log$vmbcam width $width height $height
	fset log$vmbcam fmt_in $fmt_out fmt_out I420
	fset log$vmbcam fps $fps
	fset log$vmbcam fppl $curdir/h264enc.gst
	fset log$vmbcam fts $tspath
	fset log$vmbcam verb $verb
    fi

    if [ $go = "y" ]; then
	go
    fi       
fi

