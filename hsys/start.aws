#!/bin/bash

dbg_ui=n
dbg_ap=n
dbg_n2k=n
dbg_obj=n
dbg_cam=n
dbg_sync=n
dbg_wp=n
dbg_sim=n

sim=n
rec=n
rep=n
tcyc=0.033

. ../common/config_channel

logchan="state $ch_ctrl_ui $ch_ctrl_ap1 $ch_ctrl_stat $ch_ais_obj $ch_engstate"

for arg in $*
do
    if [[ $arg =~ ^[A-Za-z0-9_]*=[A-Za-z0-9_]*$ ]]; then
	param=(${arg//=/ })
	case ${param[0]} in
	    "sim") sim=${param[1]};;
	    "rec") rec=${param[1]};;
	    "rep") rep=${param[1]};;
	    "stime") stime=${param[1]};;
	    "dbg_n2k") dbg_n2k=${param[1]};;
	    "dbg_cam") dbg_cam=${param[1]};;
	esac
    fi    
done


if [ $rep = "y" ]; then
    echo "aws starts with replay mode."
elif [ $sim = "y" ]; then
    echo "aws starts with simulation mode."
else
    echo "aws starts"
fi


channel state $ch_state
channel engstate $ch_engstate
channel env $ch_env
channel wp $ch_wp
channel ais_obj $ch_ais_obj
channel aws1_ctrl_stat $ch_ctrl_stat
channel aws1_ctrl_inst $ch_ctrl_ui
channel aws1_ctrl_inst $ch_ctrl_ap1
channel aws1_ap_inst $ch_ap_inst
channel imgr $ch_img
channel map $ch_map

channel radar_state $radar_state
channel radar_image $radar_image
channel radar_ctrl $radar_ctrl

. ./config

# object manager
echo "Setting up OBJM"
../common/obj.aws ch_state=$ch_state ch_ais_obj=$ch_ais_obj verb=$dbg_obj

# waypoint manager
echo "Setting up WPM"
../common/wp.aws ch_state=$ch_state ch_wp=$ch_wp verb=$dbg_wp

# Map manager
echo "Setting up MAP"
../common/map.aws map=map ch_map=$ch_map


cyc $tcyc

if [ $rep = "y" ]; then
    ###### replay mode #######

    if [ -z "$stime" ]; then
	echo "No start time specified."
	logs=`ls $path_data/log`
	ilog=0
	for ltime in $logs
	do
	    echo log $ilog t=$ltime :`t2str $ltime`
	    ilog=`expr $ilog + 1`
	done
	if [ $ilog = 0 ]; then
	    echo "No log data found."
	    exit
	fi
	if [ $ilog = 1 ]; then
	    isel=0
	else
	    echo "Select log number:"
	    read isel
	fi
	ilog=0
	for ltime in $logs
	do
	    if [ $ilog = $isel ]; then
		stime=$ltime
		break;
	    fi
	    ilog=`expr $ilog + 1`
	done
		
	if [ -z $stime ]; then
	    echo "Valid start time is not specified."
	    exit
	else
	    echo $log $ilog is selected.
	fi
    fi
    
    logpath=$path_data/log/$stime

    # user interface
    echo "Setting up UI"
#    ../common/ui.aws ch_state=$ch_state ch_engstate=$ch_engstate ch_img=$ch_img ch_wp=$ch_wp ch_ctrl_stat=$ch_ctrl_stat ch_ap_inst=$ch_ap_inst ch_ais_obj=$ch_ais_obj ch_map=$ch_map verb=$dbg_ui
    
    # camera
    echo "Setting up CAM"
    ../common/cam.aws vmbcam=mako0 ch_img=$ch_img stime=$stime rec=$rec rep=$rep verb=$dbg_cam

    
    echo "Setting up SIM"
    
    channel state $ch_state_sim
    channel engstate $ch_engstate_sim
    channel aws1_ctrl_stat $ch_ctrl_stat_sim
    
    ../common/sim.aws ch_state=$ch_state ch_engstate=$ch_engstate ch_ctrl_stat=$ch_ctrl_stat ch_ctrl_ui=$ch_ctrl_ui ch_ctrl_ap1=$ch_ctrl_ap1  ch_state_sim=$ch_state_sim ch_engstate_sim=$ch_engstate_sim ch_ctrl_stat_sim=$ch_ctrl_stat_sim stime=$stime
    
    echo "Setting up logs."
    filter read_ch_log log -i -o $logchan
    fset log path $logpath

    echo "Starting from $stime"
    stime_sec=`echo $stime | sed 's/.......$//'`
    go $stime_sec
else
    ###### real time mode (includes simulation mode) ######
    stime=`awstime n`
    # autopilot

    echo "Setting up AP"
    ../common/ap.aws ch_state=$ch_state ch_engstate=$ch_engstate ch_wp=$ch_wp ch_ctrl_stat=$ch_ctrl_stat ch_ctrl_inst=$ch_ctrl_ap1 ch_ap_inst=$ch_ap_inst verb=$dbg_ap
    
    if [ $sim = "y" ]; then
	echo "Setting up SIM"
	../common/sim.aws ch_state=$ch_state ch_engstate=$ch_engstate ch_ctrl_stat=$ch_ctrl_stat ch_ctrl_ui=$ch_ctrl_ui ch_ctrl_ap1=$ch_ctrl_ap1 ch_state_sim=$ch_state ch_engstate_sim=$ch_engstate ch_ctrl_stat_sim=$ch_ctrl_stat stime=$stime
	rep=n
    else
	channel state $ch_state_sim
	channel engstate $ch_engstate_sim
	channel aws1_ctrl_stat $ch_ctrl_stat_sim
	
	../common/sim.aws ch_state=$ch_state ch_engstate=$ch_engstate ch_ctrl_stat=$ch_ctrl_stat ch_ctrl_ui=$ch_ctrl_ui ch_ctrl_ap1=$ch_ctrl_ap1  ch_state_sim=$ch_state_sim ch_engstate_sim=$ch_engstate_sim ch_ctrl_stat_sim=$ch_ctrl_stat_sim stime=$stime

	# In simulation mode, following modules are not present.
	# Instead of them, ch_engstate, ch_state, ch_ctrl_stat is simulated in aws_sim
	# n2k interface
	echo "Setting up N2K"
	../common/n2k.aws ch_engstate=$ch_engstate verb=$dbg_n2k

	# radar
	echo "Setting up Radar"
	../common/radar.aws radar="radar" state=$ch_state radar_state=$radar_state radar_image=$radar_image radar_ctrl=$radar_ctrl
	
	# camera1
#	echo "Setting up CAM"
#	../common/cam.aws vmbcam=mako0 ch_img=$ch_img stime=$stime rec=$rec rep=$rep verb=$dbg_cam
	
	# channel sharing
	echo "Settng up CHS"
	../common/share.aws share=share -i $schh2l -o $schl2h verb=$dbg_share svr=n
	
	# time synchronizer
#	echo "Setting up TSYN"
#	../common/sync.aws tsync=tsync svr=n verb=$dbg_sync
    fi

    # user interface
    echo "Setting up UI"
    ../common/ui.aws ch_state=$ch_state ch_engstate=$ch_engstate ch_img=$ch_img ch_wp=$ch_wp ch_ctrl_stat=$ch_ctrl_stat ch_ctrl_inst=$ch_ctrl_ui ch_ap_inst=$ch_ap_inst ch_ais_obj=$ch_ais_obj ch_map=$ch_map verb=$dbg_ui
    
    if [ $rec = "y" ]; then
	logpath=$path_data/log/$stime
	if [ ! -d "$logpath" ]; then
	    echo "Creating $logpath"
	    mkdir $logpath
	fi

	echo "Logging start in $logpath"
	filter write_ch_log log -i $logchan -o
	fset log path $logpath
    fi
    go
fi

